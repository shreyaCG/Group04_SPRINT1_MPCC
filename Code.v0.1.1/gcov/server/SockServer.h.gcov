        -:    0:Source:SockServer.h
        -:    1:#pragma once
        -:    2:
        -:    3:#include <iostream>
        -:    4:#include <string.h>
        -:    5:#include <sys/types.h>
        -:    6:#include <sys/socket.h>
        -:    7:#include <netinet/in.h>
        -:    8:#include <arpa/inet.h>
        -:    9:#include <sys/wait.h>
        -:   10:#include <fcntl.h>
        -:   11:#include <unistd.h>
        -:   12:#include <stdlib.h>
        -:   13:#include <thread>
        -:   14:#include <future>
        -:   15:#include <string>
        -:   16:#include <exception>
        -:   17:#include <sstream>
        -:   18:#include <vector>
        -:   19:#include <fstream>
        -:   20:#include <ctime>
        -:   21:#define MAX_BUF 4096
        -:   22://#include<details.h>
        -:   23:using namespace std;
        -:   24:
        -:   25:class Server{
        -:   26:	private:
        -:   27:		int sockfd;
        -:   28:		int newsockfd;
        -:   29:		int protno,i;
        -:   30:		string ipaddr;
        -:   31:		struct sockaddr_in server_addr;
        -:   32:		struct sockaddr_in client_addr;
        -:   33:		socklen_t len;
        -:   34:		int client_sock[30];	
        -:   35:		int max_clients = 30;
        -:   36:		int serverfd, sd, max_sd;
        -:   37:		int readVal;
        -:   38:		vector <int> vs_csock;
        -:   39:		char buff[MAX_BUF];
        -:   40:		//create master socket
        -:   41:		fd_set master;
        -:   42:		// set of sock_desc...
        -:   43:		fd_set readfds;
        -:   44:		int socketCount=0;
        -:   45:		time_t now;
        -:   46:		char* date;
        -:   47:	public:
    #####:   48:		Server() { protno = 8080; ipaddr = "0.0.0.0"; }
        -:   49:		Server(int _pno, string _ip) { protno = _pno; ipaddr = _ip; }
        -:   50:		void create_socket();
        -:   51:		void bind_listen();
        -:   52:		int acceptclient(int);
        -:   53:		void servClose(int);
    #####:   54:		int getServSockfd() { return sockfd; }
    #####:   55:		struct sockaddr_in getClientAddr(){ return client_addr; }
        -:   56:		socklen_t getCAddrlen() { return len; }
        -:   57:		void serv_select(int,string);
        -:   58:		//void handleusers(char*,char*);
        -:   59:		void createfds();
        -:   60:		void countclient();
        -:   61:		void handledisconnect();
        -:   62:		void broadcast_msg();
        -:   63:		void registeruser_login();
        -:   64:};
        -:   65:
        -:   66:int readData1(int&, char*);
        -:   67:int writeData1(int&, char*);
