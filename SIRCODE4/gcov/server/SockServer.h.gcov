        -:    0:Source:SockServer.h
        -:    1:#pragma once
        -:    2:
        -:    3:#include <iostream>
        -:    4:#include <string.h>
        -:    5:#include <sys/types.h>
        -:    6:#include <sys/socket.h>
        -:    7:#include <netinet/in.h>
        -:    8:#include <arpa/inet.h>
        -:    9:#include <sys/wait.h>
        -:   10:#include <fcntl.h>
        -:   11:#include <unistd.h>
        -:   12:#include <stdlib.h>
        -:   13:#include <thread>
        -:   14:#include <future>
        -:   15:#include <string>
        -:   16:#include <exception>
        -:   17:#include <sstream>
        -:   18:#include <vector>
        -:   19:#include <fstream>
        -:   20:#include <ctime>
        -:   21:#include <bits/stdc++.h>
        -:   22:#define MAX_BUF 4096
        -:   23:using namespace std;
        -:   24:
        -:   25:class Server{
        -:   26:	private:
        -:   27:		int server_socketfd,Client_Socketfd;
        -:   28:		int portno,i;
        -:   29:		string ipaddr;
        -:   30:		struct sockaddr_in server_addr;
        -:   31:		struct sockaddr_in client_addr;
        -:   32:		socklen_t len;
        -:   33:		int client_sockets[30];
        -:   34:		char uids[30][30];	
        -:   35:		int max_clients = 30;
        -:   36:		int serverfd, SocketFD, max_socket;
        -:   37:		int readVal;
        -:   38:		vector <int> v_clientsock;
        -:   39:		char buff[MAX_BUF];
        -:   40:		fd_set master;
        -:   41:		fd_set readfds;
        -:   42:	public:
    #####:   43:		Server(int _pno, string _ip) { portno = _pno; ipaddr = _ip; }
        -:   44:		void create_socket();
        -:   45:		void bind_listen();
        -:   46:		int acceptclient(int);
        -:   47:		void Server_Close(int);
    #####:   48:		int getServSockfd() { return server_socketfd; }
        -:   49:		struct sockaddr_in getClientAddr(){ return client_addr; }
        -:   50:		socklen_t getCAddrlen() { return len; }
        -:   51:		void serv_select();
        -:   52:		void Create_fdset();
        -:   53:		void log(string);
        -:   54:		void Add_ClientSocketfd();
        -:   55:		void handle_disconnect();
        -:   56:		void broadcast_msg();
        -:   57:		void registeruser_login();
        -:   58:};
        -:   59:
